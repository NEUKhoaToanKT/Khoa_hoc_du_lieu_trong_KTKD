[["index.html", "Sách về khoa học dữ liệu Chapter 1 Prerequisites", " Sách về khoa học dữ liệu Lã Minh Hiếu 2023-07-06 Chapter 1 Prerequisites This is a sample book written in Markdown. You can use anything that Pandoc’s Markdown supports, e.g., a math equation \\(a^2 + b^2 = c^2\\). The bookdown package can be installed from CRAN or Github: install.packages(&quot;bookdown&quot;) # or the development version # devtools::install_github(&quot;rstudio/bookdown&quot;) Remember each Rmd file contains one and only one chapter, and a chapter is defined by the first-level heading #. To compile this example to PDF, you need XeLaTeX. You are recommended to install TinyTeX (which includes XeLaTeX): https://yihui.name/tinytex/. "],["intro.html", "Chapter 2 Introduction", " Chapter 2 Introduction You can label chapter and section titles using {#label} after them, e.g., we can reference Chapter 2. If you do not manually label them, there will be automatic labels anyway, e.g., Chapter 4. Figures and tables with captions will be placed in figure and table environments, respectively. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 2.1: Here is a nice figure! Reference a figure by its code chunk label with the fig: prefix, e.g., see Figure 2.1. Similarly, you can reference tables generated from knitr::kable(), e.g., see Table 2.1. knitr::kable( head(iris, 20), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Table 2.1: Here is a nice table! Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 setosa 4.9 3.0 1.4 0.2 setosa 4.7 3.2 1.3 0.2 setosa 4.6 3.1 1.5 0.2 setosa 5.0 3.6 1.4 0.2 setosa 5.4 3.9 1.7 0.4 setosa 4.6 3.4 1.4 0.3 setosa 5.0 3.4 1.5 0.2 setosa 4.4 2.9 1.4 0.2 setosa 4.9 3.1 1.5 0.1 setosa 5.4 3.7 1.5 0.2 setosa 4.8 3.4 1.6 0.2 setosa 4.8 3.0 1.4 0.1 setosa 4.3 3.0 1.1 0.1 setosa 5.8 4.0 1.2 0.2 setosa 5.7 4.4 1.5 0.4 setosa 5.4 3.9 1.3 0.4 setosa 5.1 3.5 1.4 0.3 setosa 5.7 3.8 1.7 0.3 setosa 5.1 3.8 1.5 0.3 setosa You can write citations, too. For example, we are using the bookdown package (Xie 2023) in this sample book, which was built on top of R Markdown and knitr (Xie 2015). References "],["literature.html", "Chapter 3 Literature 3.1 Bản copy của midterm visualization", " Chapter 3 Literature Here is a review of existing methods. 3.1 Bản copy của midterm visualization 3.1.1 Chuẩn bị File dữ liệu: tutor_ggplot2_data Cài đặt các package tidyverse, dplyr… Import du lieu vao trong R  Chú ý: Các màu được sử dụng không nhất thiết phải giống như trong đề bài. 3.1.2 Bài 1: Data summary Summarize data, trình bày, miêu tả về ý nghĩa và định dạng dữ liệu của các vector trong data đó. library(dplyr) library(tidyverse) library(readr) path = &quot;./data/tutor_ggplot2_data.csv&quot; data = read_csv(path) View(data) Xoá cột dãy số đầu tiên, chuyển các vector “person_home_ownership”, “loan_intent”, “loan_grade”, “loan_status”, “cb_person_default_on_file” sang dạng factor #Remove unnecessary column data = data %&gt;% select(-...1) #Đổi các vector character về dạng phù hợp variable_to_factor = c(&quot;person_home_ownership&quot;, &quot;loan_intent&quot;, &quot;loan_grade&quot;, &quot;loan_status&quot;, &quot;cb_person_default_on_file&quot;) data[variable_to_factor] = lapply(data[variable_to_factor], as.factor) Vẽ frequency của các vector factor “person_home_ownership”, “loan_intent”, “loan_grade”, “loan_status”, “cb_person_default_on_file” mà chỉ dùng base package trong R, không sử dụng ggplot, đưa tất cả các đồ thị đấy vào trong một hình duy nhất #Tạo khung đồ thị par(mfrow = c(2,3)) #Vẽ multiple boxplot factor_var = c(&quot;person_home_ownership&quot;, &quot;loan_intent&quot;, &quot;loan_grade&quot;, &quot;loan_status&quot;, &quot;cb_person_default_on_file&quot;) for (i in factor_var){ barplot(table(data[[i]]), main = i) } Vẽ boxplot và qqplot của 6 vector “person_age”,“person_income”, “person_emp_length”, “loan_amnt”, “loan_int_rate”, “loan_percent_income” mà chỉ dùng base package trong R, không sử dụng ggplot, đưa tất cả các đồ thị đấy vào trong một hình duy nhất Gợi ý: dùng mfrow() #Tạo khung đồ thị par(mfrow = c(2,3)) #Vẽ multiple boxplot continuous_var = c(&quot;person_age&quot;,&quot;person_income&quot;, &quot;person_emp_length&quot;, &quot;loan_amnt&quot;, &quot;loan_int_rate&quot;, &quot;loan_percent_income&quot;) for (i in 1:length(continuous_var)) { boxplot(data[, continuous_var[i]], main = continuous_var[i]) } #Vẽ multiple qqplot for (i in continuous_var){ qqnorm(data[[i]], main = i) #Sử dụng [[ để extract vector từ một cột bất kỳ trong dataframe qqline(data[[i]], distribution = qnorm) } 3.1.3 Bài 2: Visualize các vector factor Sử dụng hàm geom_bar() để visualize vector loan_status, với các yêu cầu sau: Bar width = 0.5 Theme_bw Màu được sử dụng: “#C0392B”,“#F5B7B1”  Tạo đồ thị như trong hình dưới đây: ggplot(data, aes(x=&quot;&quot;,fill=loan_status))+ geom_bar(width=0.5, stat=&#39;count&#39;)+ stat_count(geom=&quot;text&quot;,aes(label = stat(count)),vjust=4)+ scale_fill_manual(values= c(&quot;#C0392B&quot;,&quot;#F5B7B1&quot;))+ theme_bw()+ labs(fill=&quot;Default or not&quot;, title = &quot;Number of Default/Not Default customers&quot;) Visualize vector loan_grade sử dụng hàm geom_bar() với mã màu “#B8644D”, theme_bw.   Gợi ý:  Sử dụng hàm fct_infreq để sắp xếp thứ tự các level trong vector ordinal dựa trên số observations trong mỗi level (cái lớn nhất xuất hiện trước) Sử dụng hàm coord_flip()  Kết quả tạo ra nên như hình dưới đây: ggplot(mutate(data, loan_grade = fct_infreq(loan_grade))) + geom_bar(aes(x = loan_grade),fill = &quot;#B8644D&quot;,width=0.4) + coord_flip() + theme_bw() + labs(title = &quot;Frequency of Loan grade&quot;) + xlab(&quot;Loan Grade&quot;) + ylab(&quot;Count&quot;) 3.1.4 Bài 3: Visualize vector numeric: Khi visualize những vector thuộc dạng quantitative (định lượng), histogram là một loại biểu đồ khá hiệu quả. Vẽ histogram cho vector loan_percent_income, sử dụng theme_bw(), colour=“black”, fill=“#D49280” và đường density colour “black”. Kết quả nên cho ra như hình  ggplot(data, aes(x=loan_percent_income)) + geom_histogram(aes(y=..density..), colour=&quot;black&quot;, fill=&quot;#D49280&quot;) + geom_density(col=&quot;black&quot;) + theme_bw() + labs(title = &quot;Density histogram of Loan - Income ratio&quot;) Vẽ histogram và qqplot của vector Loan Amount trên cùng một plots như dưới đây. Màu: #D49280 Màu viền đường thẳng + hình vẽ: black Gợi ý: Trong hình có sử dụng stat_function() để vẽ đường density và QQ-line cho Loan amount. qq1&lt;-ggplot(data,aes(loan_amnt))+ geom_histogram(aes(y=..density..),color=&quot;black&quot;,fill=&quot;#D49280&quot;) + stat_function(fun = dnorm, args = list(mean = mean(data$loan_amnt,na.rm = TRUE), sd = sd(data$loan_amnt,na.rm = TRUE)), color =&#39;black&#39;,size = 1) + theme_bw() + labs(title = &quot;Histogram of Loan amount density&quot;) qq2&lt;-ggplot(data, aes(sample = loan_amnt)) + stat_qq(color = &quot;#D49280&quot;) + stat_qq_line() + theme_bw() + labs(title = &quot;QQPlot of Loan amount&quot;) grid.arrange(qq1, qq2, ncol=2) Sử dụng box plot để vẽ đồ thị vector loan_int_rate, với fill là “gray”. Kết quả sẽ ra như dưới đây: ggplot(data, aes(x = loan_int_rate)) + geom_boxplot(fill = &quot;grey&quot;) + theme_bw() + coord_flip() + labs(title = &quot;Boxplot of Loan interest rate&quot;) 3.1.5 Bài 4: Vẽ biểu đồ với nhiều vector khác nhau: Vẽ biểu đồ cột (bar plot) đếm số lượng khách hàng, phân biệt theo loan_grade và loan_status. Bảng màu cần thiết: “#641E16”,“#C0392B”.  Kết quả nên ra như sau:  ggplot(data, aes(x = factor(loan_grade), fill = factor(loan_status))) + geom_bar(aes(fill = loan_status), position = &quot;dodge&quot;) + #position = &quot;fill&quot; thì sẽ chồng hết lên nhau scale_fill_manual(values=c(&quot;#641E16&quot;,&quot;#C0392B&quot;,&quot;#DC7633&quot;,&quot;#839192&quot;,&quot;#5D6D7E&quot;,&quot;#7E5109&quot;,&quot;#2E4053&quot;)) + theme_bw() + ylab(&quot;Count&quot;) + xlab(&quot;Default or not&quot;) + labs(fill = &quot;Loan Grade:&quot;, title = &quot;Count of Loan Grade based on Loan Status&quot;) Tương tự, vẽ biểu đồ cột (bar plot) đếm số lượng khách hàng, phân biệt theo person_home_ownership và loan_status. Các màu cần thiết: “#C0392B”,“#DC7633”,“#9A7D0A”,“#1F618D”. #Chinh lai thanh dang 2 column doi dien nhau ggplot(data, aes(x = loan_grade, fill = person_home_ownership)) + geom_bar(position = &quot;dodge&quot;) + theme(legend.position=&quot;bottom&quot;) + scale_fill_manual(values=c(&quot;#C0392B&quot;,&quot;#DC7633&quot;,&quot;#9A7D0A&quot;,&quot;#1F618D&quot;)) + theme_minimal() + ylab(&quot;Count&quot;) + xlab(&quot;Loan Status&quot;) + labs(fill = &quot;Type of ownership:&quot;, title = &quot;Count of Home onwership based on Loan Status&quot;) 3.1.6 Bài 5: Vẽ biểu đồ thể hiện mối quan hệ giữa 2 vector numeric: Vẽ biểu đồ thể hiện mối quan hệ giữa 2 vector: person_age và person_income Màu được sử dụng: #B5350D.  Vẽ đường geom_smooth() bằng phương pháp “lm”.  Kết quả nên như hình dưới đây: #Do thi kha la, giai thich tai sao data %&gt;% group_by(person_age, person_home_ownership) %&gt;% summarise(mean_person_income = mean(person_income)) %&gt;% ggplot(aes(person_age, mean_person_income)) + geom_point(na.rm = TRUE, alpha = 0.8) + geom_smooth(method=&quot;gam&quot;) + theme_bw() + ylab(&quot;Person Income&quot;) + xlab(&quot;Age&quot;) + labs(title = &quot;Relationship between Age and Person Income&quot;) Tương tự câu a, vẽ đồ thị liên hệ giữa loan_int_rate và loan_percent_income, có sử dụng group_by bằng vector person_age và person_home_ownership, summarise bằng mean của vector person_income.  Tuy nhiên đường geom_smooth được vẽ bằng phương pháp “gam”.  Kết quả nên cho ra như bên dưới:  #Do thi kha la, giai thich tai sao data %&gt;% group_by(person_age, person_home_ownership) %&gt;% summarise(mean_person_income = mean(person_income)) %&gt;% ggplot(aes(person_age, mean_person_income, col = person_home_ownership)) + geom_point(na.rm = TRUE, alpha = 0.8) + geom_smooth(method=&quot;gam&quot;) + theme_bw() + ylab(&quot;Person Income&quot;) + xlab(&quot;Age&quot;) + labs(title = &quot;Relationship between Age and Person Income, depends on Home ownership&quot;) Sử dụng facet_wrap để giúp cho đồ thị dễ nhìn hơn  Kết quả nên cho ra như sau: #Do thi kha la, giai thich tai sao data %&gt;% group_by(person_age, person_home_ownership) %&gt;% summarise(mean_person_income = mean(person_income)) %&gt;% ggplot(aes(person_age, mean_person_income, col = person_home_ownership)) + geom_point(na.rm = TRUE, alpha = 0.8) + geom_smooth(method=&quot;gam&quot;) + theme_bw() + ylab(&quot;Person Income&quot;) + xlab(&quot;Age&quot;) + labs(title = &quot;Relationship between Age and Person Income, depends on Home ownership&quot;) + facet_wrap(~person_home_ownership, ncol = 2) 3.1.7 Bài 6: Vẽ biểu đồ biểu diễn một vector numeric và một vector factor Vẽ biểu đồ density của vector loan_amnt, phân biệt bằng vector loan_status.  Các màu được sử dụng là “#868686FF”, “#B5350D”   Sử dụng geom_point(alpha = 0.7) giúp biểu đồ dễ nhìn hơn. ggplot(data, aes(x = loan_amnt, fill = loan_status)) + geom_density(alpha = 0.7) + theme_bw() + scale_fill_manual(values = c(&quot;#868686FF&quot;, &quot;#B5350D&quot;)) + labs(title = &quot;Density of Loan amount based on Loan status&quot;) 3.1.8 Bài 7: Vẽ biểu đồ biểu diễn 2 vector numeric và 1 vector factor Vẽ biểu đồ dựa trên 2 vector numeric là person_age và person_income, phân biệt bằng vector person_home_ownership.  Bảng màu được sử dụng: “#2471A3”,“#8E44AD”,“#F4D03F”,“#C0392B”  Sử dụng geom_point(alpha = 0.7) giúp biểu đồ dễ nhìn hơn.  #Xem xet thiet ke cai nay theo palette ggplot(data, aes(person_age, person_income, color=person_home_ownership)) + geom_point(alpha = 0.7) + ylab(&quot;Income&quot;) + xlab(&quot;Age&quot;) + labs(color = &quot;Home ownership: &quot;) + scale_color_manual(values=c(&quot;#2471A3&quot;,&quot;#8E44AD&quot;,&quot;#F4D03F&quot;,&quot;#C0392B&quot;)) + theme_bw() + coord_flip() + labs(title = &quot;Plot of Age, Income based on Home ownership&quot;) Sử dụng facet để làm đồ thị rõ ràng hơn  #Xem xet thiet ke cai nay theo palette ggplot(data, aes(person_age, person_income, col=person_home_ownership)) + geom_point(alpha = 0.7) + ylab(&quot;Income&quot;) + xlab(&quot;Age&quot;) + labs(color = &quot;Home ownership: &quot;) + scale_color_manual(values=c(&quot;#2471A3&quot;,&quot;#8E44AD&quot;,&quot;#F4D03F&quot;,&quot;#C0392B&quot;)) + theme_bw() + coord_flip() + labs(title = &quot;Plot of Age, Income based on Home ownership&quot;) + facet_wrap(~ person_home_ownership, ncol = 2) Vẽ biểu đồ dựa trên 2 vector numeric là person_age và person_income, phân biệt bằng vector loan_grade.  Bảng màu được sử dụng là “#A93226”,“#884EA0”,“#2471A3”,“#138D75”,“#D4AC0D”,“#BA4A00”,“#2E4053”  #Trong kha kinh, xem xet dung loai bieu do khac ggplot(data, aes(person_age, loan_int_rate, col=loan_grade)) + geom_point() + scale_color_manual(values=c(&quot;#A93226&quot;,&quot;#884EA0&quot;,&quot;#2471A3&quot;,&quot;#138D75&quot;,&quot;#D4AC0D&quot;,&quot;#BA4A00&quot;,&quot;#2E4053&quot;)) + coord_flip() + ylab(&quot;Interest rate&quot;) + xlab(&quot;Age&quot;) + theme_bw() + labs(color = &quot;Loan Grade: &quot;, title = &quot;Plot of Loan Interest Rate and Age based on Loan Grade&quot;) + facet_wrap(~ loan_grade, ncol = 3) 3.1.9 Bài 8: Vẽ biểu đồ một vector numeric và 2 vector factor Vẽ 2 boxplots cạnh nhau thể hiện mối liên hệ giữa customer’s loan status và loan amount, phân biệt bởi home ownership.  Một đồ thị sử dụng facet_wrap, một đồ thị không sử dụng.  Bảng màu được sử dụng: “#C0392B”,“#F0F3F4”,“#9A7D0A”,“#1F618D” Gợi ý: Sử dụng grid.arrange()  Kết quả nên hiển thị như sau: p1&lt;-ggplot(data, aes(x=loan_status, y=loan_amnt, fill=person_home_ownership)) + geom_boxplot(show.legend = FALSE) + labs(x = &quot;Loan Amount&quot;, y = &quot;Loan status&quot;) + scale_fill_manual(values=c(&quot;#C0392B&quot;,&quot;#F0F3F4&quot;,&quot;#9A7D0A&quot;,&quot;#1F618D&quot;)) + facet_wrap(~person_home_ownership, ncol=2) p2&lt;-ggplot(data, aes(x=loan_status, y=loan_amnt, fill=person_home_ownership)) + geom_boxplot(show.legend = TRUE) + scale_color_manual(values=c(&quot;#C0392B&quot;,&quot;#F0F3F4&quot;,&quot;#9A7D0A&quot;,&quot;#1F618D&quot;)) + labs(x = &quot;Loan Amount&quot;, y = &quot;Loan status&quot;) grid.arrange(p1,p2,ncol=2) 3.1.10 Bài 9: Vẽ biểu đồ đường Vẽ biểu đồ đường sử dụng geom_line(), thể hiện mối quan hệ giữa vector mean(loan_amnt) theo từng lứa tuổi, được phân biệt bởi vector person_home_ownership.  Bảng màu được dựa theo các vector: “#2471A3”,“#8E44AD”,“#F4D03F”,“#C0392B”.  Kết quả nên cho ra như bên dưới:  data %&gt;% group_by(person_age, person_home_ownership) %&gt;% summarise(mean_loan_amnt = mean(loan_amnt)) %&gt;% ggplot(mapping = aes(x = person_age, y = mean_loan_amnt, color = person_home_ownership)) + geom_line() + labs(x = &quot;Age&quot;, y = &quot;Person Income&quot;, fill = &quot;Home Ownership&quot;) + scale_color_manual(values = c(&quot;#2471A3&quot;,&quot;#8E44AD&quot;,&quot;#F4D03F&quot;,&quot;#C0392B&quot;)) Tương tự câu a, nhưng sử dụng facetting giúp cho đồ thị dễ nhìn hơn: data %&gt;% group_by(person_age, person_home_ownership) %&gt;% summarise(mean_loan_amnt = mean(loan_amnt)) %&gt;% ggplot(mapping = aes(x = person_age, y = mean_loan_amnt, color = person_home_ownership)) + geom_line() + labs(x = &quot;Age&quot;, y = &quot;Person Income&quot;, fill = &quot;Home Ownership&quot;) + scale_color_manual(values = c(&quot;#2471A3&quot;,&quot;#8E44AD&quot;,&quot;#F4D03F&quot;,&quot;#C0392B&quot;)) + facet_wrap(~person_home_ownership, ncol = 2) "],["methods.html", "Chapter 4 Methods 4.1 math example", " Chapter 4 Methods We describe our methods in this chapter. Math can be added in body using usual syntax like this 4.1 math example \\(p\\) is unknown but expected to be around 1/3. Standard error will be approximated \\[ SE = \\sqrt(\\frac{p(1-p)}{n}) \\approx \\sqrt{\\frac{1/3 (1 - 1/3)} {300}} = 0.027 \\] You can also use math in footnotes like this1. We will approximate standard error to 0.0272 \\[ SE = \\sqrt(\\frac{p(1-p)}{n}) \\approx \\sqrt{\\frac{1/3 (1 - 1/3)} {300}} = 0.027 \\] Now I test the plot of the data in R: #library(dplyr) library(dplyr) data = read.csv(&quot;./data/tutor_ggplot2_data.csv&quot;) head(data) ## X person_age person_income person_home_ownership person_emp_length ## 1 1 21 9600 OWN 5 ## 2 2 25 9600 MORTGAGE 1 ## 3 3 23 65500 RENT 4 ## 4 4 24 54400 RENT 8 ## 5 5 21 9900 OWN 2 ## 6 6 26 77100 RENT 8 ## loan_intent loan_grade loan_amnt loan_int_rate loan_status ## 1 EDUCATION B 1000.00 11.14 0 ## 2 MEDICAL C 5500.00 12.87 1 ## 3 MEDICAL C 14473.21 15.23 1 ## 4 MEDICAL C 14952.96 14.27 1 ## 5 VENTURE A 2500.00 7.14 1 ## 6 EDUCATION B 26240.78 12.42 1 ## loan_percent_income cb_person_default_on_file cb_person_cred_hist_length ## 1 0.10 N 2 ## 2 0.57 N 3 ## 3 0.53 N 2 ## 4 0.55 Y 4 ## 5 0.25 N 2 ## 6 0.45 N 3 And this is the ggplot2 package: suppressMessages(library(dplyr)) suppressMessages(library(tidyverse)) data %&gt;% filter(person_income &gt;50000) %&gt;% ggplot(aes(x = loan_amnt)) + geom_histogram(fill = &quot;red&quot;, col = &quot;black&quot;) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. where we mention \\(p = \\frac{a}{b}\\)↩︎ \\(p\\) is unknown but expected to be around 1/3. Standard error will be approximated↩︎ "],["applications.html", "Chapter 5 Applications 5.1 Example one 5.2 Example two", " Chapter 5 Applications Some significant applications are demonstrated in this chapter. 5.1 Example one Đây là một vài hình vẽ rất đẹp. Test dấu hỏi library(tidyverse) library(gganimate) library(dslabs) library(gifski) p&lt;-gapminder%&gt;% # FIX DU LIEU filter(year&lt;=2010)%&gt;% # AESTHETIC MAPPING ggplot(aes(x=fertility,y=life_expectancy,size = population, colour= continent))+ # TAO DO THI SCATTERPLOT geom_point(alpha=0.8)+ # THAY DOI TITLE CUA DO THI, TRUC X, TRUC Y labs(title = &#39;Year: {as.integer(frame_time)}&#39;, y = &quot;Life expectancy&quot;, x = &quot;Fertility&quot;)+ #GIOI HAN LAI GIA TRI TREN X,Y xlim(0,10)+ylim(20,90)+ # SCALE LAI SIZE (POPULATION) scale_size(range = c(1, 20)) + # SCALE LAI MAU SAC THE0 DAI MAU &quot;SET1&quot; CUA BREWER scale_color_brewer(palette = &quot;Set1&quot;)+ # LAM TITLE THAY DOI THEO NAM transition_time(year)+ #SIZE &amp; FONT CHU theme(, plot.title = element_text(size = 20, colour = &quot;blue&quot;), axis.title.x = element_text(size = 15), axis.title.y = element_text(size = 15), legend.text = element_text(size = 15,margin = margin(r = 30, unit = &quot;pt&quot;)), legend.title = element_text(size = 18), #legend.key.size = element_rect(size = rel(1.5)), ) # TAO DO THI DANG DONG animate(p, renderer = gifski_renderer(), width = 800, #pixel chieu rong height = 800) # pixel chieu cao ``` 5.2 Example two "],["final-words.html", "Chapter 6 Final Words", " Chapter 6 Final Words We have finished a nice book. "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
